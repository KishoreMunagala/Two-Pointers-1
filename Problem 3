// Time Complexity :O(n)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this :


// Your code here along with comments explaining your approach

class Solution {
    public int maxArea(int[] height) 
    {
        int max = Integer.MIN_VALUE;
        int n = height.length;
        int left = 0;
        int right = n-1;
        while(left < right)
        {
            if(height[left]<height[right])
            {
                max = Math.max(max, (right - left) * height[left]);
                left++;
            }
            
            else
            {
                max = Math.max(max, (right - left) * height[right]);
                right--;
            }
            
        }
    return max;   
    }
}